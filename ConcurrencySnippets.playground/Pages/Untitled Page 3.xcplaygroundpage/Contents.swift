//: [Previous](@previous)

import Foundation
import UIKit

let main = DispatchQueue.main

let userInteractiveQueue = DispatchQueue.global(qos: .userInteractive)
let userInitiatedQueue = DispatchQueue.global(qos: .userInitiated)
let defaultQueue = DispatchQueue.global(qos: .default)
let utilityQueue = DispatchQueue.global(qos: .utility)
let backgroundQueue = DispatchQueue.global(qos: .background)



//MARK: - Race Condition
var value = "üí©"
let myserialQueue =  DispatchQueue.global(qos: .userInitiated) // –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –±—É–¥—É—Ç –º–µ–Ω—è—Ç—å—Å—è –¥–∞–Ω–Ω—ã–µ
func changeValue(variant: Int) {
    sleep(1)
    value = value + "ü§üüèø"
    print("\(value) - \(variant)")
}

// –ó–∞–ø—É—Å–∫–∞–µ–º changeValue() –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º value –Ω–∞ —Ç–µ–∫—É—â–µ–º –ø–æ—Ç–æ–∫–µ
myserialQueue.async {
    changeValue(variant: 1)
}
value

// —Ç–µ–ø–µ—Ä—å –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏–º value, –∞ –∑–∞—Ç–µ–º –≤—ã–ø–æ–ª–Ω–∏–º changeValue() –°–ò–ù–•–†–ù–û–ù–ù–û, –±–ª–æ–∫–∏—Ä—É—è —Ç–µ–∫—É—â–∏–π –ø–æ—Ç–æ–∫ –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –∑–∞–¥–∞–Ω–∏–µ changeValue –Ω–µ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è, —É–±–∏—Ä–∞—è —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º race condition
value = "üéÉ"
myserialQueue.sync {
    changeValue(variant: 2)
}
value


