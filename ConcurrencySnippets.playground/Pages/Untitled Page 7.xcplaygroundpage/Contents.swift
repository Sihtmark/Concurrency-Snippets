import UIKit
import PlaygroundSupport
PlaygroundPage.current.needsIndefiniteExecution = true

// MARK: –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –°—Ä–µ–¥–∞

// MARK: –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –û—á–µ—Ä–µ–¥–∏ –∏ –ó–∞–¥–∞–Ω–∏—è

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –≤—ã–±—Ä–∞—Å—ã–≤–∞–Ω–∏—è background tasks –∫–æ–≥–¥–∞ main thread –±—É–¥–µ—Ç –∑–∞–∫–æ–Ω—á–µ–Ω–∞

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ global queues

// 1. –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è (serial) main queue
let mainQueue = DispatchQueue.main

// 2. –ì–ª–æ–±–∞–ª—å–Ω—ã–µ Concurrent dispatch queues
let userInteractiveQueue = DispatchQueue.global(qos: .userInteractive)
let userQueue = DispatchQueue.global(qos: .userInitiated)
let defaultQueue = DispatchQueue.global()
let utilityQueue = DispatchQueue.global(qos: .utility)
let backgroundQueue = DispatchQueue.global(qos: .background)

// –í –∫–∞—á–µ—Å—Ç–≤–µ –∑–∞–¥–∞–Ω–∏—è task –≤—ã–±–µ—Ä–µ–º –ø–µ—á–∞—Ç—å –ª—é–±—ã—Ö –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ —Ç–µ–∫—É—â–µ–π –æ—á–µ—Ä–µ–¥–∏. –ï—â–µ –æ–¥–Ω–æ –∑–∞–¥–∞–Ω–∏–µ taskHIGH –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø–µ—á–∞—Ç–∞—Ç—å –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª –º—ã –±—É–¥–µ–º –∑–∞–ø—É—Å–∫–∞—Ç—å —Å –≤—ã—Å–æ–∫–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º:

// tasks:
func task(_ symbol: String) {
    for i in 1...10 {
        print("\(symbol) \(i) prioritate = \(qos_class_self().rawValue)")
    }
}
func taskHIGH(_ symbol: String) {
    print("\(symbol) prioritate = \(qos_class_self().rawValue)")
}


// MARK: Private –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –æ—á–µ—Ä–µ–¥–∏

// –ü–æ–º–∏–º–æ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –æ—á–µ—Ä–µ–¥–µ–π –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ private –æ—á–µ—Ä–µ–¥–∏ —Å –ø–æ–º–æ—â—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –∫–ª–∞—Å—Å–∞ DispatchQueue

// –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ —á—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –æ—á–µ—Ä–µ–¥–∏ - —ç—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω–∞—è –º–µ—Ç–∫–∞ label. –ï—Å–ª–∏ –Ω–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –±–æ–ª—å—à–µ –Ω–∏–∫–∞–∫–∏—Ö –¥—Ä—É–≥–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫—Ä–æ–º–µ label —Ç–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–æ–∑–¥–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è (.serial) –æ—á–µ—Ä–µ–¥—å. –ï—Å—Ç—å –∏ –¥—Ä—É–≥–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—á–µ—Ä–µ–¥–∏

// –°–º–æ—Ç—Ä–∏–º –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç Private –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –æ—á–µ—Ä–µ–¥—å mySerialQueue –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ sync –∏ async –º–µ—Ç–æ–¥–æ–≤:

// Private Serial Queue
let mySerialQueue = DispatchQueue(label: "com.bescora.mySerial")

print("-----------------------")
print("         sync          ")
print("Private .serial Q1 - no")
print("-----------------------")

mySerialQueue.sync { task("üòÄ") }
task("üòà")

print("-----------------------")
print("         async         ")
print("Private .serial Q1 - no")
print("-----------------------")

mySerialQueue.async { task("üòÄ") }
task("üòà")

/// –í —Å–ª—É—á–∞–µ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ sync –º—ã –≤–∏–¥–∏–º —Ç—É –∂–µ —Å–∏—Ç—É–∞—Ü–∏—é, —á—Ç–æ –∏ –≤ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–µ 3 -—Ç–∏–ø –æ—á–µ—Ä–µ–¥–∏ –Ω–µ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏—è sync –º–æ–∂–µ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å –∑–∞–º—ã–∫–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â–µ–º –ø–æ—Ç–æ–∫–µ. –ò–º–µ–Ω–Ω–æ —ç—Ç–æ –º—ã –∏ –≤–∏–¥–∏–º.

/// –ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç, –µ—Å–ª–∏ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º async –º–µ—Ç–æ–¥ –∏ –ø–æ–∑–≤–æ–ª–∏–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –æ—á–µ—Ä–µ–¥–∏ mySerialQueue –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–¥–∞–Ω–∏—è
 
/// –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫ —Ç–µ–∫—É—â–µ–π –æ—á–µ—Ä–µ–¥–∏? –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∏ –Ω–µ –æ–∂–∏–¥–∞–µ—Ç, –ø–æ–∫–∞ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –≤ –æ—á–µ—Ä–µ–¥–∏ mySerialQueue; —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø–µ—Ä–µ–π–¥–µ—Ç –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –∑–∞–¥–∞–Ω–∏–π

/// –∏ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª–Ω—è—Ç—å –∏—Ö –≤ –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ –≤—Ä–µ–º—è, —á—Ç–æ –∏ –∑–∞–¥–∞–Ω–∏—è
