import UIKit
import PlaygroundSupport
PlaygroundPage.current.needsIndefiniteExecution = true


// MARK: –°–æ—Å—Ç–æ—è–Ω–∏–µ –≥–æ–Ω–∫–∏ (Race Condition)
// –ú—ã –º–æ–∂–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –ø—Ä–æ—Å—Ç–µ–π—à–∏–π —Å–ª—É—á–∞–π race condition –µ—Å–ª–∏ –±—É–¥–µ–º –∏–∑–º–µ–Ω—è—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é value –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –Ω–∞ private –æ—á–µ—Ä–µ–¥–∏ –∞ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å value –Ω–∞ main –ø–æ—Ç–æ–∫–µ
var value = "üòá"
var mySerialQueue = DispatchQueue.global(qos: .userInteractive)
func changeValue(variant: Int) {
    sleep(1)
    value += "üêî"
    print("\(value) - \(variant)")
}

// –ó–∞–ø—É—Å–∫–∞–µ–º changeValue() –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º value –Ω–∞ main –ø–æ—Ç–æ–∫–µ
mySerialQueue.async {
    changeValue(variant: 1)
}
value // value –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å

// –¢–µ–ø–µ—Ä—å –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏–º value –∞ –∑–∞—Ç–µ–º –≤—ã–ø–æ–ª–Ω–∏–º changeValue() —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ, –±–ª–æ–∫–∏—Ä—É—è —Ç–µ–∫—É—â–∏–π –ø–æ—Ç–æ–∫ –¥–æ —Ç–µ—Ö –ø–æ—Ä –ø–æ–∫–∞ –∑–∞–¥–∞–Ω–∏–µ changeValue –Ω–µ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è —É–±–∏—Ä–∞—è —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º race condition
value = "ü¶ä"
mySerialQueue.sync {
    changeValue(variant: 2)
}
value // value –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –æ–±—Ä–∞–∑–æ–º

//MARK: –î–∞–≤–∞–π—Ç–µ –∑–∞–º–µ–Ω–∏–º –º–µ—Ç–æ–¥ async –Ω–∞ sync
// –ó–∞–ø—É—Å–∫–∞–µ–º changeValue() —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º value –Ω–∞ —Ç–µ–∫—É—â–µ–º –ø–æ—Ç–æ–∫–µ
print("–£–±–∏—Ä–∞–µ–º Race Condition —Å –ø–æ–º–æ—â—å—é sync")
value = "üòá"
mySerialQueue.sync {
    changeValue(variant: 1)
}
value // value –∏–∑–º–µ–Ω–∏–ª–æ—Å—å

// –¢–µ–ø–µ—Ä—å –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏–º value –∞ –∑–∞—Ç–µ–º –≤—ã–ø–æ–ª–Ω–∏–º changeValue() —Ç–æ–∂–µ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ, –±–ª–æ–∫–∏—Ä—É—è —Ç–µ–∫—É—â–∏–π –ø–æ—Ç–æ–∫ –¥–æ —Ç–µ—Ö –ø–æ—Ä –ø–æ–∫–∞ –∑–∞–¥–∞–Ω–∏–µ changeValue() –Ω–µ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è, —É–±–∏—Ä–∞—è —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º Race Condition
value = "ü¶ä"
mySerialQueue.sync {
    changeValue(variant: 2)
}
value // value –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
