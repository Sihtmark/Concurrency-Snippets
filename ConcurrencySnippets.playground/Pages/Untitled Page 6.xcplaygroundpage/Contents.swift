import UIKit
import PlaygroundSupport
PlaygroundPage.current.needsIndefiniteExecution = true

// MARK: –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –°—Ä–µ–¥–∞

// MARK: –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –û—á–µ—Ä–µ–¥–∏ –∏ –ó–∞–¥–∞–Ω–∏—è

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –≤—ã–±—Ä–∞—Å—ã–≤–∞–Ω–∏—è background tasks –∫–æ–≥–¥–∞ main thread –±—É–¥–µ—Ç –∑–∞–∫–æ–Ω—á–µ–Ω–∞

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ global queues

// 1. –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è (serial) main queue
let mainQueue = DispatchQueue.main

// 2. –ì–ª–æ–±–∞–ª—å–Ω—ã–µ Concurrent dispatch queues
let userInteractiveQueue = DispatchQueue.global(qos: .userInteractive)
let userQueue = DispatchQueue.global(qos: .userInitiated)
let defaultQueue = DispatchQueue.global()
let utilityQueue = DispatchQueue.global(qos: .utility)
let backgroundQueue = DispatchQueue.global(qos: .background)

// –í –∫–∞—á–µ—Å—Ç–≤–µ –∑–∞–¥–∞–Ω–∏—è task –≤—ã–±–µ—Ä–µ–º –ø–µ—á–∞—Ç—å –ª—é–±—ã—Ö –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ —Ç–µ–∫—É—â–µ–π –æ—á–µ—Ä–µ–¥–∏. –ï—â–µ –æ–¥–Ω–æ –∑–∞–¥–∞–Ω–∏–µ taskHIGH –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø–µ—á–∞—Ç–∞—Ç—å –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª –º—ã –±—É–¥–µ–º –∑–∞–ø—É—Å–∫–∞—Ç—å —Å –≤—ã—Å–æ–∫–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º:

// tasks:
func task(_ symbol: String) {
    for i in 1...10 {
        print("\(symbol) \(i) prioritate = \(qos_class_self().rawValue)")
    }
}
func taskHIGH(_ symbol: String) {
    print("\(symbol) prioritate = \(qos_class_self().rawValue)")
}

// MARK: —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å –∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å –Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –æ—á–µ—Ä–µ–¥—è—Ö

// –ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ—á–µ—Ä–µ–¥—å –Ω–∞–ø—Ä–∏–º–µ—Ä userQueue –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–¥–∞–Ω–∏—è –Ω–∞ –Ω–µ–π –ª–∏–±–æ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ sync –ª–∏–±–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ async
print("--------------------------------------")
print("               sync                   ")
print("Global .concurrent Q1 - .userInitiated")
print("--------------------------------------")
userQueue.sync { task("üòÄ") }
task("üòà")
sleep(2)

print("--------------------------------------")
print("               async                  ")
print("Global .concurrent Q1 - .userInitiated")
print("--------------------------------------")
userQueue.async { task("üòÄ") }
task("üòà")

// –í —Å–ª—É—á–∞–µ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è —Å—Ç–∞—Ä—Ç—É—é—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –æ–¥–∏–Ω –∑–∞ –¥—Ä—É–≥–∏–º –∏ —Å–ª–µ–¥—É—é—â–µ–µ —á–µ—Ç–∫–æ –∂–¥–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ. –í –∫–∞—á–µ—Å—Ç–≤–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏—è sync –º–æ–∂–µ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å –∑–∞–º—ã–∫–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â–µ–º –ø–æ—Ç–æ–∫–µ –µ—Å–ª–∏ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω–æ–π –æ—á–µ—Ä–µ–¥–∏ –Ω–µ –±—É–¥–µ—Ç –∏–º–µ—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è. –ò–º–µ–Ω–Ω–æ —ç—Ç–æ –º—ã –∏ –≤–∏–¥–∏–º.
// –í —Å–ª—É–∞–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è task("üòà") —Å—Ç–∞—Ä—Ç—É—é—Ç –Ω–µ –¥–æ–∂–∏–¥–∞—è—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π task("üòÄ") –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—å –≥–ª–æ–±–∞–ª—å–Ω–æ–π –æ—á–µ—Ä–µ–¥–∏ userQueue –≤—ã—à–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞ –Ω–∞ Playground. –°–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –∑–∞–¥–∞–Ω–∏—è –Ω–∞ userQueue –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è —á–∞—â–µ.



 

